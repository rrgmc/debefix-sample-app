version: 3

env:
  LOCAL_DB_URL: "postgres://sample_user:sample_password@localhost:5438/debefix-sample-app?sslmode=disable"

tasks:
  run:
    cmds:
      - SERVER_CONFIG_FILE=./config/config.local.yaml go run ./cmd/server

  local-deps:
    cmds:
      - "docker-compose -p debefix-sample-app-deps -f ./scripts/local-deps/docker-compose.yml up -d"
  local-deps-stop:
    cmds:
      - "docker-compose -p debefix-sample-app-deps -f ./scripts/local-deps/docker-compose.yml down"
  local-deps-logs:
    cmds:
      - "docker-compose -p debefix-sample-app-deps -f ./scripts/local-deps/docker-compose.yml logs"
  local-deps-setup:
    cmds:
      - task: local-deps-destroy
      - task: local-deps
      - "sleep 3"
      - task: db-migration-up
  local-deps-destroy:
    cmds:
      - "docker-compose -p debefix-sample-app-deps -f ./scripts/local-deps/docker-compose.yml down -v"

  db-migration-create:
    cmds:
      - "docker run -v ./scripts/db-migrations:/migrations --network host migrate/migrate -path=/migrations/ create -ext sql -dir /migrations -seq {{.NAME}}"
    requires:
      vars: ["NAME"]
  db-migration-up:
    cmds:
      - "docker run -v ./scripts/db-migrations:/migrations --network host migrate/migrate -path=/migrations/ -database $LOCAL_DB_URL up"
  db-migration-down:
    cmds:
      - "docker run -v ./scripts/db-migrations:/migrations --network host migrate/migrate -path=/migrations/ -database $LOCAL_DB_URL down 1"
  db-migration-force:
    cmds:
      - "docker run -v ./scripts/db-migrations:/migrations --network host migrate/migrate -path=/migrations/ -database $LOCAL_DB_URL force {{.VERSION}}"
    requires:
      vars: ["VERSION"]
